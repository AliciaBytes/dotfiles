# If not running interactively, don't do anything
case $- in
*i*) ;;
*) return ;;
esac

# Set up ssh-agent properly if a related script exists.
if [ -f ~/.ssh/agent.sh ]; then
    . ~/.ssh/agent.sh
fi

{{ if eq .chezmoi.os "linux" -}}
if [[ $(ps --no-header --pid=$PPID --format=comm) != "fish" && -z ${BASH_EXECUTION_STRING} ]]; then
    shopt -q login_shell && LOGIN_OPTION='--login' || LOGIN_OPTION=''
    exec fish $LOGIN_OPTION
fi
{{ end -}}

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern `**` used in a pathname expansion context will
# match all files and zero or more directories and subdirectories
shopt -s globstar

# Alias definitions
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

if [ -d ~/.bash_aliases.d ]; then
    for aliasfile in ~/.bash_aliases.d/*; do
        . "$aliasfile"
    done
fi

# Function definitions
# You may want to put all your additions into a separate file like
# ~/.bash_functions, instead of adding them here directly.
if [ -f ~/.bash_functions ]; then
    . ~/.bash_functions
fi

if [ -d ~/.bash_functions.d ]; then
    for functionfile in ~/.bash_functions.d/*; do
        . "$functionfile"
    done
fi

eval "$(starship init bash)"

[[ -f ~/.bash-preexec.sh ]] && source ~/.bash-preexec.sh
eval "$(atuin init bash)"
